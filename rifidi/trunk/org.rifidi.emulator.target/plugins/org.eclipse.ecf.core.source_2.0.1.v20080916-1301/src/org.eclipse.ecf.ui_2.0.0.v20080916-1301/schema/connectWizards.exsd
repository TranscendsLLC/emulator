<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.ecf.ui">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.ecf.ui" id="connectWizards" name="ECF Connect Wizard"/>
      </appInfo>
      <documentation>
         This extension point allows providers to register wizards for connecting IContainer
instances.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <choice minOccurs="0" maxOccurs="unbounded">
            <element ref="category"/>
            <element ref="wizard"/>
         </choice>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="category">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name"/>
         </appInfo>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique name that can be used to identify this category
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  a translatable name of the category that will be used in the dialog box
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="parentCategory" type="string">
            <annotation>
               <documentation>
                  a path to another category if this category should be added as a child
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="wizard">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name" icon="icon"/>
         </appInfo>
         <documentation>
            an element that will be used to create export wizard
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="description" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique name that will be used to identify this wizard
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  a translatable name that will be used in the dialog box to represent this wizard
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="category" type="string">
            <annotation>
               <documentation>
                  a slash-delimited path (&apos;/&apos;) of category IDs. Each token in the
path must represent a valid category ID previously defined
by this or some other plug-in. If omitted, the wizard will be
added to the &quot;Other&quot; category.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified name of the class that implements &lt;tt&gt;org.eclipse.ecf.ui.IConnectWizard&lt;/tt&gt;
interface
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.jface.wizard.Wizard:org.eclipse.ecf.ui.IConnectWizard"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  a relative name of the icon that will be used 
alongside the wizard name in the export engine listing.
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="containerFactoryName" type="string" use="required">
            <annotation>
               <documentation>
                  The ContainerTypeName of the container to be created.  For example, &quot;ecf.generic.client&quot;.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="description" type="string">
      <annotation>
         <appInfo>
            <meta.element translatable="true"/>
         </appInfo>
         <documentation>
            an optional subelement whose body should represent a short description
of the export engine functionality.
         </documentation>
      </annotation>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         ECF 0.9.4
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         Implementers of this extension point must specify an extension of the &lt;b&gt;org.eclipse.ecf.ui.connectWizards&lt;/b&gt; extension point.

&lt;pre&gt;
  &lt;extension
        point=&quot;org.eclipse.ecf.ui.connectWizards&quot;&gt;
     &lt;wizard
           class=&quot;org.my.client.MyClientConnectWizard&quot;
           containerFactoryName=&quot;org.my.client&quot;
           id=&quot;my.client.connect.wizard&quot;
           name=&quot;My Client Connect Wizard&quot;
           icon=&quot;icons/connect.png&quot;&gt;
     &lt;/wizard&gt;
  &lt;/extension&gt;
&lt;/pre&gt;

      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         The &quot;class&quot; attribute (required) must have a class that implements the &lt;b&gt;org.eclipse.ecf.ui.IConfigurationWizard&lt;/b&gt; interface:

&lt;pre&gt;
/**
 * Required interface for implementing &lt;b&gt;org.eclipse.ecf.ui.connectWizards&lt;/b&gt;
 * extension point. Extensions for extension point
 * &lt;b&gt;org.eclipse.ecf.ui.connectWizards&lt;/b&gt; must provide a class implementing
 * this interface.
 */
public interface IConnectWizard extends IWizard {

	/**
	 * Initialize the connect wizard.
	 * 
	 * @param workbench
	 *            the currently working workbench instance. Will not be null.
	 * @param container
	 *            the container that is to be connected. Will not be null.
	 */
	public void init(IWorkbench workbench, IContainer container);
}

&lt;/pre&gt;


      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         /****************************************************************************
 * Copyright (c) 2004 Composent, Inc. and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Composent, Inc. - initial API and implementation
 *****************************************************************************/


      </documentation>
   </annotation>

</schema>
