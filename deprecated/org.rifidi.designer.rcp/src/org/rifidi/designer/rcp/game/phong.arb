!!ARBfp1.0

TEMP tmp;
TEMP dif;
TEMP spec0, spec1;
TEMP specColor0, specColor1;
TEMP view;
TEMP rgb;
TEMP total;

TEMP light0pos, light0vec;
TEMP light1pos, light1vec;

ATTRIB tex = fragment.texcoord[0];
ATTRIB normal = fragment.texcoord[0];
PARAM specIntensity =  program.local[0];

#Code
#get diffuse texture
TEX rgb, tex, texture[0], 2D;

#normalize the view
DP3 view.a, normal, normal;
RSQ view.a, view.a;
MUL view.rgb, normal, view.a;

#pointing to light0
DP4 light0pos, view.a, state.light[0].position;
SUB light0vec, light0pos, fragment.position;
MOV light0vec, state.light[0].position;

#compute half angle vector for light 1
ADD spec0.rgb, view, light0vec;
DP3 spec0.a, spec0, spec0;
RSQ spec0.a, spec0.a;
MUL spec0.rgb, spec0, spec0.a;
#compute specular intensisty
DP3_SAT spec0.a, spec0, view;
LG2 spec0.a, spec0.a;
EX2 spec0.a, spec0.a;
MUL spec0.a, spec0.a, rgb;

#copmute specular lights
MUL specColor0, spec0.a, state.light[0].diffuse;
MUL specColor0, total, specIntensity;

#compute ambient light
DP3_SAT dif, view, rgb;
ADD_SAT dif.rgb, dif, state.lightmodel.ambient;

#sum
MAD_SAT dif.rgb, rgb, dif, total;
MOV result.color, dif;

END